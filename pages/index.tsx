import Head from 'next/head'
import cheerio from 'cheerio';

export default function Home(data: HtmlProp) {
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
        {/*<link href={data.css} rel="stylesheet" />*/}
        <style>{data.css}</style>
      </Head>
      <main className="container">
        <h1 className="text-3xl font-bold underline">
          Hello world!
        </h1>
        <div dangerouslySetInnerHTML={{__html: data.html}}/>
        <button className="btn-secondary">Save changes</button>
      </main>
      
    </>
  )
}

export async function getStaticProps() {
  const htmlRes = await fetch('http://localhost:3030/templates/example-1/index.html');
  const html = await htmlRes.text();

  if (!htmlRes.ok) {
    // If there is a server error, you might want to
    // throw an error instead of returning so that the cache is not updated
    // until the next successful request.
    throw new Error(`Failed to fetch html, received status ${htmlRes.status}`)
  }
  
  const $ = cheerio.load(html);
  
  const body = $('#app').html();
  const cssFile = $('link').attr().href;
  const cssURL = `http://localhost:3030${cssFile}`;

  const cssRes = await fetch(`${cssURL}`);
  const css = await cssRes.text();

  if (!cssRes.ok) {
    throw new Error(`Failed to fetch css, received status ${cssRes.status}`)
  }

  const htmlProps: HtmlProp = {
    html: body || '',
    css: css,
  };
  
  return {
    props: htmlProps,
    //revalidate: 10
  }
}

interface HtmlProp {
  html: string;
  css: string;
}